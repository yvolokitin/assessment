// questions translation
export const questions = {
    // English
    'en': {
        'practise_automation_q1': '1.1 Is test automation a part of your test strategy?',
        'practise_automation_q2': '1.2 Do you use test pyramid approach to balance portfolio of automated tests?',
        'practise_automation_q3': '1.3 Is automated test pyramid balanced?',
        'practise_automation_q4': '1.4 Do you review and update automated test pyramid regularly?',
        'practise_automation_q5': '1.5 Does test automation code follows the same coding standards as production code?',
        'practise_automation_q6': '1.6 Do you use dedicated environment to execute test automation?',
        'practise_automation_q7': '1.7 Do you track defects reported by test automation?',
        'practise_automation_q8': '1.8 Do you have a strategy to prevent defect reopen?',
        'practise_automation_q9': '1.9 Do you review failed reports from auto tests?',
        'practise_automation_q10': '1.10 How do you prepare Test Data for Automated tests?',

        'practise_unit_test_q1': '2.1 Do you write unit tests?',
        'practise_unit_test_q2': '2.2 Do you execute Unit tests in CI in Pre-commit, post-commit and merge?',
        'practise_unit_test_q3': '2.3 Do you measure code coverage for unit tests?',
        'practise_unit_test_q4': '2.4 Do you have a unit test coverage target?',
        'practise_unit_test_q5': '2.5 Is unit test code coverage target met?',
        'practise_unit_test_q6': '2.6 Is measurement of unit test coverage included in Continuous Integration process?',
        'practise_unit_test_q7': '2.7 Do you break Continuous Integration build in case of unit test code coverage is not met?',
        'practise_unit_test_q8': '2.8 Do you use Test-driven development (TDD)?',

        'practise_component_test_q1': '3.1 Do you have automated Component tests?',
        'practise_component_test_q2': '3.2 Do you integrate automated Component tests in CI pipeline?',
        'practise_component_test_q3': '3.3 Do you track Component tests coverage (by methods, services covered)?',
        'practise_component_test_q4': '3.4 Do you have automated Integration tests?',
        'practise_component_test_q5': '3.5 Do you integrate automated Integration tests in CI pipeline?',
        'practise_component_test_q6': '3.6 Do you execute Integration tests right after each deployment on CI environment?',
        'practise_component_test_q7': '3.7 Do you track Integration tests coverage (by methods, services covered)?',
        'practise_component_test_q8': '3.8 Do you use Mocks or Simulator with Component or Integration tests?',

        // smokeregression
        'practise_smokeregression_q1': '4.1 Do you have Smoke Tests and is it documented?',
        'practise_smokeregression_q2': '4.2 Is Smoke Test automated (% of automated tests)?',
        'practise_smokeregression_q3': '4.3 Is Smoke Test integrated into CI and executed?',
        'practise_smokeregression_q4': '4.4 What is Smoke tests execution time for AUTOMATED tests?',
        'practise_smokeregression_q5': '4.5 Do you have flickering results in your Automated Smoke Tests?',
        'practise_smokeregression_q6': '4.6 Do you have Automated Regression Testing (suites) on system-integration level?',
        'practise_smokeregression_q7': '4.7 How often do you execute Regression Tests?',
        'practise_smokeregression_q8': '4.8 What is the percentage of Automated Regression Tests?',
        'practise_smokeregression_q9': '4.9 Do you track automated Regression Test coverage by business cases / requirements?',
        'practise_smokeregression_q10': '4.10 What is Regression Test execution time for Automated tests?',

        'practise_code_quality_q1': '5.1 Do you have style guides and standards?',
        'practise_code_quality_q2': '5.2 Do you use style checker tool in IDE?',
        'practise_code_quality_q3': '5.3 Do you use dependency management tool? ',
        'practise_code_quality_q4': '5.4 Do you practice peer code review?',
        'practise_code_quality_q5': '5.5 Do you have Code Reviewers assignment strategy? ',
        'practise_code_quality_q6': '5.6 Do you have a professional tool for code review?',
        'practise_code_quality_q7': '5.7 Do have code review check list?',
        'practise_code_quality_q8': '5.8 Do you use static code analysis tools?',
        'practise_code_quality_q9': '5.9 Do you use pre-commit code review?',

        'practise_testcase_management_q1': '6.1 Do you document test cases?',
        'practise_testcase_management_q2': '6.2 Do you base test cases creation not only on requirements? ',
        'practise_testcase_management_q3': '6.3 Do you create test cases based on defects analysis?',
        'practise_testcase_management_q4': '6.4 Do you prioritize test cases?',
        'practise_testcase_management_q5': '6.5 Do you have practice of test case review (like code review)?',
        'practise_testcase_management_q6': '6.6 Do you use a tool for test case management? (JIRA as example)',
        'practise_testcase_management_q7': '6.7 Do you manage requirements and test cases in one OR integrated tool?',
        'practise_testcase_management_q8': '6.8 Are your test cases traceable/linked to your requirements?',
        'practise_testcase_management_q9': '6.9 Do you cover All requirements with the test cases?',
        // 'practise_testcase_management_q9': '6.9 What is % of the requirements covered with the test cases?',
        'practise_testcase_management_q10': '6.10 Do you have test suites defined by testing priorities (e.g. Smoke Test, Regression Test)?',
        'practise_testcase_management_q11': '6.11 Do you use Gherkin language for documenting test cases? (Behaviour-Driven Development)',
        'practise_testcase_management_q12': '6.12 Do you include test cases bases on leaked defects into Regression suite?',

        'practise_defect_management_q1': '7.1 Do you have defect management policy defined that you follow?',
        'practise_defect_management_q2': '7.2 Do you have defect submission rules that you follow?',
        'practise_defect_management_q3': '7.3 Do you have defect severity definitions?',
        'practise_defect_management_q4': '7.4 Do you have defect priority?',
        'practise_defect_management_q5': '7.5 Do you use bug tracking system to log defects?',
        'practise_defect_management_q6': '7.6 Are registered defects easily traced to test case and requirement?',
        'practise_defect_management_q7': '7.7 Do you measure % of open defects comparing to all defects within last 3 iteration?',
        'practise_defect_management_q8': '7.8 Do you track, analyse and fix with high priority defects leaked to the Production?',
        // 'practise_defect_management_q9': '7.9 What is % of manual effort during pre-release testing cycle?',
        // 'practise_defect_management_q10': '7.10 What is % of defects leaked to the Production comparing to all defects?',

        'practise_integration_q1': '8.1 How often (in average) do you merge code into trunk/master/main/develop?',
        'practise_integration_q2': '8.2 How often do you merge code from trunk/master/main/develop to your feature branch?',
        'practise_integration_q3': '8.3 Do you have continuous integration server/tool?',
        'practise_integration_q4': '8.4 Is a step of build production integrated to CI pipeline and executed by commit/merge?',
        'practise_integration_q5': '8.5 How long does a step of build production take?',
        'practise_integration_q6': '8.6 Do you have a release/build repository allowing you to reproduce bugs of previous version?',
        'practise_integration_q7': '8.7 Does your CI pipeline includes a step of copying a builds in a special repository?',
        'practise_integration_q8': '8.8 Can you trace all your production build and release candidate builds to the source code revision?',
        'practise_integration_q9': '8.9 Are you keeping your main branch in "green" state',
        'practise_integration_q10': '8.10 Not green state is a blocker for you to continue work?',
        'practise_integration_q11': '8.11 Does your build process have pre-commit validation in order to keep repository source code valid?',
        'practise_integration_q12': '8.12 Have you integrated and use static analysis tool and its thresholds with continuous integration tool?',

        'practise_deployment_q1': '9.1 Is application deployment automated and can be done via "single click"?',
        'practise_deployment_q2': '9.2 Is automated deployment integrated with CI and can be run unattended? ',
        'practise_deployment_q3': '9.3 How often deployment (on the last possible environment) is executed?',
        'practise_deployment_q4': '9.4 Do you have automatic rollback if deliverable after deployment doesn\'t work?',
        'practise_deployment_q5': '9.5 What environment are covered by automated deployment process?',
        'practise_deployment_q6': '9.6 Have you specified production/runtime environment requirements?',
        'practise_deployment_q7': '9.7 Do you have deployment guide/script? (for Prod)',
        'practise_deployment_q8': '9.8 Do you have build configuration tool?',
        'practise_deployment_q9': '9.9 Do you have any toolset to perform automatic environment deployment and you apply it in your continuous deployment process?',

        'practise_release_strategy_q1': '10.1 How often do you release into Production?',
        'practise_release_strategy_q2': '10.2 How fast can you have a new version of a shippable product?',
        'practise_release_strategy_q3': '10.3 Do you have any rules of release versioning and branching?',
        'practise_release_strategy_q4': '10.4 Do you have Test Strategy defined that you follow?',
        'practise_release_strategy_q5': '10.5 Do you have a recovery strategy to rollback any previous build?',
        'practise_release_strategy_q6': '10.6 Do you have a defined approach how to rollback builds from the Production?',
        'practise_release_strategy_q7': '10.7 What testing do you execute for every release?',
        'practise_release_strategy_q8': '10.8 What testing do you execute for every hot-fix?',
        'practise_release_strategy_q9': '10.9 How many different environments do you have?',
        'practise_release_strategy_q10': '10.10 How do you create environments?',
        'practise_release_strategy_q11': '10.11 In which environment do you execute final testing?',
        'practise_release_strategy_q12': '10.12 Does you Test Data for final testing is the same or almost the same to that of Production?',
        'practise_release_strategy_q13': '10.13 How often do you prepare test data from Production environment?',
        'practise_release_strategy_q14': '10.14 Which of your environments are equal (in terms of functionality and performance) to the Prod configuration?',
        'practise_release_strategy_q15': '10.15 Do you have a notification strategy/policy/framework for your release process?',
        'practise_release_strategy_q16': '10.16 Do you aware and apply change management process in project?',

        'practise_requirements_q1': '11.1 Do you have definition of done?',
        'practise_requirements_q2': '11.2 Do you have Release Ready rules documented?',
        'practise_requirements_q3': '11.3 Do your requirements have acceptance criteria (testable)?',
        'practise_requirements_q4': '11.4 Do you have definition of ready?',
        'practise_requirements_q5': '11.5 Do you use a tool for Requirements Management? (JIRA count)',
        'practise_requirements_q6': '11.6 Do you involve PO (requirements stakeholders) to early feature acceptance?',
        'practise_requirements_q7': '11.7 Does QA review requirements before implementation?',
 
        'practise_docs_logs_q1': '12.1 Does your application log all events/exceptions/errors?',
        'practise_docs_logs_q2': '12.2 Are you using special tools to investigate issues and analyze logs?',
        'practise_docs_logs_q3': '12.3 Do you use tools to analyze application usage? ',
        'practise_docs_logs_q4': '12.4 Does your application have any support interfaces or API to show status indicators for load or performance?',
        'practise_docs_logs_q5': '12.5 Do you have environment monitoring alerting of KPI degradation?',
        'practise_docs_logs_q6': '12.6 Do you have any architecture document? ',
        'practise_docs_logs_q7': '12.7 Can you trace requirements to the component(s) implementing them?',
        'practise_docs_logs_q8': '12.8 Do you keep architecture document(s) up to date?',
        'practise_docs_logs_q9': '12.9 Do you have list of documented architecture significant requirements?',
        'practise_docs_logs_q10': '12.10 Do you have technical non functional requirements?',

        'practise_non_functional_q1': '13.1 Have you automated performance test execution?',
        'practise_non_functional_q2': '13.2 Is Performance test automation integrated with Build/Deploy process?',
        'practise_non_functional_q3': '13.3 Do you have an automatic reporting for Performance test automation?',
        'practise_non_functional_q4': '13.4 Have you automated stress test execution? ',
        'practise_non_functional_q5': '13.5 Is stress test automation integrated with Build/Deploy process?',
        'practise_non_functional_q6': '13.6 Do you have an automatic reporting for stress test automation?',
        'practise_non_functional_q7': '13.7 Do you have security test execution?',
        'practise_non_functional_q8': '13.8 Is security test automation integrated with Build/Deploy process?',
        'practise_non_functional_q9': '13.9 Do you have an automatic reporting for security test automation?',
    },
};
